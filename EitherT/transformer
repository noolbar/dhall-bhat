let Transformer = ./../Transformer/Type

let EitherT = ./Type

let Either = ./../Either/Type

let Monad = ./../Monad/Type

in    λ(a : Type)
    →   { lift =
              λ(m : Type → Type)
            → λ(monad : Monad m)
            → λ(b : Type)
            → λ(ma : m b)
            → monad.map
                b
                (Either a b)
                (λ(r : b) → < Right : b | Left : a >.Right r)
                ma
        }
      : Transformer (EitherT a)
